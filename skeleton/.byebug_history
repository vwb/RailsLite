exit
s
exit
File.foreach("asd")
File.read("asdf")
File.readlines("asdf")
continue
s
continue
exit
exc.backtrace
exc.__bb_context
exc.missing_name
"StatusesController".snakecase
exc.message
exc.cause
exc.methods - Object.methods
exc.backtrace
exc.backtrace_locations
exc.methods
exc
env
source_code_error_info
s
continue
selected_lines
exit
exc.backtrace[0].split(":")
exc.backtrace[0]
exc.backtrace
line
selected_lines
exit
selected_lines
source_file
exit
path
continue
env
env.class
env.calss
env.methods - Object.methods
env.methods
env
continue
file
file.read
continue
file
exit
file
val
continue
@retrieved_flash
exit
cont
s
continue
@retrieved_flash[:errors]
@retrieved_flash
continue
exit
exti
exit
@retrieved_flash
continue
@retrieved_flash
continue
@retrieved_flash
cookie
continue
@retrieved_flash
retrieved_flash
cookie
exit
JSON.parse(cook)
cook.nil?
cook
exit
continue
cook
continue
exit
continue
cook
continue
cook
continue
cook
exit
continue
s
@retrieved_flash
s
cook
continue
s
ss
s
@flash_to_store
@retrieved_flash
s
@retrieved_flash
s
cook
s
cook
exit
cook
s
@retrieved_flash
s
cook
@flash_to_store
continue
s
@flash_to_store
cook
s
@flash_to_store
@retrieved_flash
@retrived_flash
s
cook
@flash_to_store
cont
@flash_to_store
s
@retrieved_flash
s
cook
s
cook
exit
continue
step
param
step
param
val
key
step
cook
step
req.cookies
cook
exit
controller.index
controller = controller_class.new(req, res, route_hash)
Cats2Controller.index
controller_class
exit
self.class
self.index
self
name
exit
env["rack.input"]
env[rack.input]
env.keys
env
exit
req
req.params
exit
route_hash
exit
route_params
exit
req.params
exit
route_params
req.params
req
